services:
  url-shortener-https:
    build: 
      dockerfile: Dockerfile
    image: ${DOCKER_REGISTRY-}url-shortener
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - USE_HTTPS=true
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ASPNETCORE_HTTPS_PORT=7262
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__PostgresConnection=Host=${DB_HOST};Port=${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD};
      - ConnectionStrings__RedisConnection=redis:6379
    ports:
      - "5094:80"
      - "7262:443"
    volumes:
      - ${HTTPS_CERTIFICATE_PATH:-/dev/null}:/https/aspnetapp.pfx:/https/
      - ${DATA_PROTECTION_CERTIFICATE_PATH:-/dev/null}:/app/keys/datacert.pfx
      - dataprotection-keys:/app/keys
    networks:
      - aspnetcore-network
    profiles: [https]

  url-shortener-http:
    build: 
        dockerfile: Dockerfile
    image: ${DOCKER_REGISTRY-}url-shortener
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - USE_HTTPS=false
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ConnectionStrings__PostgresConnection=Host=${DB_HOST};Port=${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD};
      - ConnectionStrings__RedisConnection=redis:6379
    ports:
      - "5094:80"
    volumes:
      - dataprotection-keys:/app/keys
    networks:
      - aspnetcore-network
    profiles: [http]

  postgres:
    image: postgres
    restart: always
    user: ${DB_USER}
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aspnetcore-network
    profiles: [http, https]

  redis:
    image: redis
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["redis-server"]
    ports:
      - '6379:6379'
    networks:
      - aspnetcore-network
    profiles: [http, https]

networks:
  aspnetcore-network:
    driver: bridge

volumes:
  dataprotection-keys: